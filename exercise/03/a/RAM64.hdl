// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 RAM8s, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address[0..2],a=l1,b=l2,c=l3,d=l4,e=l5,f=l6,g=l7,h=l8);
    RAM8(in=in,load=l1,address=address[3..5],out=k1);
    RAM8(in=in,load=l2,address=address[3..5],out=k2);
    RAM8(in=in,load=l3,address=address[3..5],out=k3);
    RAM8(in=in,load=l4,address=address[3..5],out=k4);
    RAM8(in=in,load=l5,address=address[3..5],out=k5);
    RAM8(in=in,load=l6,address=address[3..5],out=k6);
    RAM8(in=in,load=l7,address=address[3..5],out=k7);
    RAM8(in=in,load=l8,address=address[3..5],out=k8);
    Mux8Way16(a=k1,b=k2,c=k3,d=k4,e=k5,f=k6,g=k7,h=k8,sel=address[0..2],out=out);
}