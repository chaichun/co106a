// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address,a=l1,b=l2,c=l3,d=l4,e=l5,f=l6,g=l7,h=l8);
    Register(in=in,load=l1,out=k1);
    Register(in=in,load=l2,out=k2);
    Register(in=in,load=l3,out=k3);
    Register(in=in,load=l4,out=k4);
    Register(in=in,load=l5,out=k5);
    Register(in=in,load=l6,out=k6);
    Register(in=in,load=l7,out=k7);
    Register(in=in,load=l8,out=k8);
    Mux8Way16(a=k1,b=k2,c=k3,d=k4,e=k5,f=k6,g=k7,h=k8,sel=address,out=out);
}